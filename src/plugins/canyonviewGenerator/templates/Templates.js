/* Generated file based on ejs templates */
define([], function() {
    return {
    "Activity.x3a.ejs": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<SourceFile Version=\"1.0.2.10\" xmlns=\"http://www.ni.com/SourceModel.xsd\">\r\n  <Namespace Name=\"Project\">\r\n    <GuidedHelp xmlns=\"http://www.ni.com/GuidedHelp.xsd\">\r\n      <Slides>\r\n        <Slide GuidedHelpSize=\"SmallVertical\" SlideName=\"\" NextButtonEnabled=\"True\" OnSlideChanged=\"\" Signature=\"MzsamCCcYhOpgwycFAeALbdt9PiJfawWU9RA7epr0zjnd3EscZk0AOl0IhEYMu3yH2mpxu0DeXQes8/bV3EjjQ==\" TemplateID=\"Full\">\r\n          <SimpleData UniqueID=\"RichTextTitle\" Version=\"0\" UserEditable=\"False\" WideControl=\"False\">\r\n            <Text><RichTextDocument fontsize=\"14\" fontfamily=\"Verdana\" xmlns=\"http://www.ni.com/ActivityRichTextDocument.xsd\"><p><b></b></p></RichTextDocument></Text>\r\n          </SimpleData>\r\n          <SimpleData UniqueID=\"Media\" Version=\"0\" />\r\n          <Children>\r\n            <Slide GuidedHelpSize=\"Large\" SlideName=\"\" OnSlideChanged=\"\" TemplateID=\"Full\">\r\n              <SimpleData UniqueID=\"RichTextTitle\" Version=\"0\" UserEditable=\"False\" WideControl=\"False\">\r\n                <Text />\r\n              </SimpleData>\r\n              <SimpleData UniqueID=\"RichText\" Version=\"0\" UserEditable=\"False\" WideControl=\"False\">\r\n                <Text />\r\n              </SimpleData>\r\n              <Children />\r\n            </Slide>\r\n          </Children>\r\n        </Slide>\r\n      </Slides>\r\n      <MediaDictionary />\r\n    </GuidedHelp>\r\n  </Namespace>\r\n</SourceFile>",
    "ActivityAssets.laz.ejs": "PK\u0005\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000",
    "Project.lvprojx.ejs": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<SourceFile Version=\"1.0.2.10\" xmlns=\"http://www.ni.com/SourceModel.xsd\">\n    <Namespace Name=\"Default\">\n        <Project xmlns=\"http://www.ni.com/Project.xsd\">\n            <Target DocumentTypeIdentifier=\"VIVMTarget\" Name=\"VI\\ Virtual\\ Machine\">\n                <ProjectReference ReferenceName=\"NationalInstruments.VI.VirtualMachine.Runtime, Version=0.0.0.0\" ReferencePath=\"\" />\n                <ProjectReference ReferenceName=\"NationalInstruments.LabVIEW.CoreRuntime, Version=0.0.0.0\" ReferencePath=\"\" />\n                <SourceFileReference StoragePath=\"Activity.x3a\" RelativeStoragePath=\"Activity.x3a\" DocumentTypeIdentifier=\"NationalInstruments.GuidedHelpFramework.Model.GuidedHelp\" Name=\"Activity\\.x3a\" />\n                <SourceFileReference StoragePath=\"robot program.ev3p\" RelativeStoragePath=\"robot program.ev3p\" OverridingDocumentTypeIdentifier=\"X3VIDocument\" DocumentTypeIdentifier=\"NationalInstruments.LabVIEW.VI.Modeling.VirtualInstrument\" Name=\"robot\\ program\\.ev3p\" />\n                <DefinitionReference DocumentTypeIdentifier=\"NationalInstruments.ExternalFileSupport.Modeling.ExternalFileType\" Name=\"ActivityAssets\\.laz\" Bindings=\"Envoy,DefinitionReference,EmbeddedReference,ProjectItemDragDropDefaultService\" />\n                <DefinitionReference DocumentTypeIdentifier=\"NationalInstruments.X3.App.X3FolderLoaderDefinition\" Name=\"vi\\.lib_\" Bindings=\"Envoy,DefinitionReference,EmbeddedReference\" />\n                <DefinitionReference DocumentTypeIdentifier=\"NationalInstruments.ExternalFileSupport.Modeling.ExternalFileType\" Name=\"___ProjectTitle\" Bindings=\"Envoy,DefinitionReference,EmbeddedReference,ProjectItemDragDropDefaultService\" />\n                <DefinitionReference DocumentTypeIdentifier=\"NationalInstruments.ExternalFileSupport.Modeling.ExternalFileType\" Name=\"___CopyrightYear\" Bindings=\"Envoy,DefinitionReference,EmbeddedReference,ProjectItemDragDropDefaultService\" />\n                <DefinitionReference DocumentTypeIdentifier=\"NationalInstruments.X3.App.X3FolderLoaderDefinition\" Name=\"vi\\.lib_PBR\" Bindings=\"Envoy,DefinitionReference,EmbeddedReference\" />\n            </Target>\n            <ProjectSettings>\n                <NamedGlobalData xmlns=\"http://www.ni.com/X3NamedGlobalData.xsd\" />\n                <ProjectOrigin Path=\"en-US/Internal/FreePlayProgram.ev3\" xmlns=\"http://www.ni.com/X3ProjectOrigin.xsd\" />\n                <DaisyChainMode On=\"False\" xmlns=\"http://www.ni.com/X3ProjectPropertiesModel.xsd\" />\n            </ProjectSettings>\n        </Project>\n    </Namespace>\n    <Namespace Name=\"VI\\ Virtual\\ Machine\">\n        <VIVMTarget xmlns=\"http://www.ni.com/VIVMTarget.xsd\" />\n    </Namespace>\n    <Namespace Name=\"ActivityAssets\\.laz\">\n        <ExternalFile xmlns=\"http://www.ni.com/ExternalFile.xsd\">\n            <RelativeStoragePath>ActivityAssets.laz</RelativeStoragePath>\n            <StoragePath></StoragePath>\n        </ExternalFile>\n    </Namespace>\n    <Namespace Name=\"vi\\.lib_\">\n        <LoaderDefinition xmlns=\"http://www.ni.com/LoaderDefinition.xsd\">\n            <Type>FolderLoaderDefinition</Type>\n            <Name>vi.lib_</Name>\n            <Location />\n        </LoaderDefinition>\n    </Namespace>\n    <Namespace Name=\"___ProjectTitle\">\n        <ExternalFile xmlns=\"http://www.ni.com/ExternalFile.xsd\">\n            <RelativeStoragePath>___ProjectTitle</RelativeStoragePath>\n            <StoragePath></StoragePath>\n        </ExternalFile>\n    </Namespace>\n    <Namespace Name=\"___CopyrightYear\">\n        <ExternalFile xmlns=\"http://www.ni.com/ExternalFile.xsd\">\n            <RelativeStoragePath>___CopyrightYear</RelativeStoragePath>\n            <StoragePath></StoragePath>\n        </ExternalFile>\n    </Namespace>\n    <Namespace Name=\"vi\\.lib_PBR\">\n        <LoaderDefinition xmlns=\"http://www.ni.com/LoaderDefinition.xsd\">\n            <Type>FolderLoaderDefinition</Type>\n            <Name>vi.lib_PBR</Name>\n            <Location />\n        </LoaderDefinition>\n    </Namespace>\n</SourceFile>",
    "___CopyrightYear.ejs": "2014",
    "___ProjectTitle.ejs": "Project",
    "c++.generated.cpp.ejs": "// Generated from:\n//\n//\n<%\nvar i, j,\n        outerIf = 'if',\n        innerIf = 'if',\n        initialStateName;\n\nfor (i = 0; i < pathModel.motion.length; i += 1) {\n}\n\n%>\n#include <iostream>\n#include <string>\n#include <set>\n\n\nint main(int argc, char** argv)\n{\n    std::cout << \"State machine for <%=pathModel.name%>. Type 'exit' to exit the program any time.\" << std::endl;\n\n<%for (i = 0; i < pathModel.motion.length; i += 1) {%>    std::cout << \"Motion: <%=pathModel.motion[i].name%>\" << std::end;\n<%}%>\n\n    return 0;\n}",
    "matlab.generated.m.ejs": "// Generated from:\n//\n//\n<%\nvar i, j,\n        outerIf = 'if',\n        innerIf = 'if',\n        initialStateName;\n\nfor (i = 0; i < pathModel.motion.length; i += 1) {\n}\n\n%>\n#include <iostream>\n#include <string>\n#include <set>\n\n\nint main(int argc, char** argv)\n{\n    std::cout << \"State machine for <%=pathModel.name%>. Type 'exit' to exit the program any time.\" << std::endl;\n\n<%for (i = 0; i < pathModel.motion.length; i += 1) {%>    std::cout << \"Motion: <%=pathModel.motion[i].name%>\" << std::end;\n<%}%>\n\n    return 0;\n}",
    "path.generated.txt.ejs": "<%\n\tvar gridDistance = 6.096*2; // 20ft * 2\n\tvar velocity = 1;\n  var condition;\n  var codeToExecute;\n\taddMotion = function (motion, radius, velocity, distance, angle) {\n%><%=motion%> <%=radius%> <%=velocity%> <%=distance%> <%=angle%>\n<%\n\t}\n  addControl = function(motion,times,condition,codeToExecute)\n  {\n%><%=motion%> <%=times%> <%=condition%><%for (i = 0; i < codeToExecute.length; i += 1) {%> <%=codeToExecute[i]%><%}%>\n<%\n  }\n  addAction = function(motion)\n  {\n%><%=motion%>\n<%\n  }\nmotion = {};\nhaveMotion = false;\nfor (i = 0; i < pathModel.motion.length; i += 1) {\n\tif(pathModel.motion[i].isStart) {\n\t\tmotion = pathModel.motion[i];\n\t\thaveMotion = true;\n\t\tbreak;\n\t}\n}\n\nwhile(haveMotion) {\n//console.log('Have a motion: ' + JSON.stringify(motion, null, 4));\n//console.log(' - PrimitiveMotionConnections: ' + JSON.stringify(motion.PrimitiveMotionConnections, null, 4));\nswitch(motion.Type) {\n\tcase 1:\t// straight\n\t\taddMotion(1, 0, velocity, gridDistance, 0);\n\t    break;\n\tcase 2:\t// left\n\t\taddMotion(2, gridDistance, velocity, 0, 90);\n\t    break;\n\tcase 3:\t// right\n\t\taddMotion(3, gridDistance, velocity, 0, 90);\n\t    break;\n\tcase 4:// ZigZagLeft\n\t\taddMotion(2, gridDistance/2, velocity, 0, 90);\n\t\taddMotion(3, gridDistance/2, velocity, 0, 90);\n\t    break;\n\tcase 5: // ZigZagRight\n\t\taddMotion(3, gridDistance/2, velocity, 0, 90);\n\t\taddMotion(2, gridDistance/2, velocity, 0, 90);\n\t    break;\n  case 6:\n    addControl(6,motion.Times,0,motion.CodeToExecute);\n      break;\n  case 7:\n    addControl(7,0,motion.Condition,motion.CodeToExecute);\n      break;\n  case 8:\n    addControl(8,0,motion.Condition,motion.CodeToExecute);\n      break;\n  case 9:\n    addAction(9);\n      break;\n  case 10:\n    addAction(10);\n      break;\n  case 11:\n    addAction(11);\n      break;\n  case 12:\n    addAction(12);\n      break;\n}\n\nhaveMotion = false;\nif( motion.Connections.length != 0) {\n//\tconsole.log('There exists an outgoing connection');\n\tfor (i = 0; i < pathModel.motion.length; i += 1) {\n\t\tif(pathModel.motion[i].id === motion.Connections[0].targetId) {\n\t\t\thaveMotion = true;\n\t\t\tmotion = pathModel.motion[i];\n\t\t\tbreak;\n\t\t}\n\t}\n}\n}%>\n",
    "robot program.ev3p.ejs": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<SourceFile Version=\"1.0.2.10\" xmlns=\"http://www.ni.com/SourceModel.xsd\">\n    <Namespace Name=\"Project\">\n        <VirtualInstrument IsTopLevel=\"false\" IsReentrant=\"false\" Version=\"1.0.2.0\" OverridingModelDefinitionType=\"X3VIDocument\" xmlns=\"http://www.ni.com/VirtualInstrument.xsd\">\n            <FrontPanel>\n                <fpruntime:FrontPanelCanvas xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:fpruntime=\"clr-namespace:NationalInstruments.LabVIEW.FrontPanelRuntime;assembly=NationalInstruments.LabVIEW.FrontPanelRuntime\" xmlns:Model=\"clr-namespace:NationalInstruments.SourceModel.Designer;assembly=NationalInstruments.SourceModel\" x:Name=\"FrontPanel\" Model:DesignerSurfaceProperties.CanSnapToObjects=\"True\" Model:DesignerSurfaceProperties.SnapToObjects=\"True\" Model:DesignerSurfaceProperties.ShowSnaplines=\"True\" Model:DesignerSurfaceProperties.ShowControlAdorners=\"True\" Width=\"640\" Height=\"480\" />\n            </FrontPanel>\n            <BlockDiagram Name=\"__RootDiagram__\">\n\t\t\t\t<StartBlock Id=\"n1\" Bounds=\"42 34 70 91\" Target=\"X3\\.Lib:StartBlockTest\">\n                    <ConfigurableMethodTerminal>\n                        <Terminal Id=\"Result\" Direction=\"Output\" DataType=\"Boolean\" Hotspot=\"0.5 1\" Bounds=\"0 0 0 0\" />\n                    </ConfigurableMethodTerminal>\n                    <Terminal Id=\"SequenceOut\" Direction=\"Output\" Wire=\"w6\" DataType=\"NationalInstruments:SourceModel:DataTypes:X3SequenceWireDataType\" Hotspot=\"1 0.5\" Bounds=\"52 33 18 18\" />\n                </StartBlock>\n<%\n    addMotion = function(componentID,componentX,legoL,legoR, legoRot, wireID, isFinal, motionName) {\n%>                <ConfigurableMethodCall Id=\"n<%=componentID%>\" Bounds=\"<%=componentX%> 34 194 91\" Target=\"MoveTankDistanceRotations\\.vix\">\n                    <ConfigurableMethodTerminal ConfiguredValue=\"1.B+C\">\n                        <Terminal Id=\"Ports\" Direction=\"Input\" DataType=\"Single\" Hotspot=\"0.5 1\" Bounds=\"0 0 0 0\" />\n                    </ConfigurableMethodTerminal>\n                    <ConfigurableMethodTerminal ConfiguredValue=\"<%=legoL%>\">\n                        <Terminal Id=\"Speed\\ Left\" Direction=\"Input\" DataType=\"Single\" Hotspot=\"0.5 1\" Bounds=\"54 56 30 27\" />\n                    </ConfigurableMethodTerminal>\n                    <ConfigurableMethodTerminal ConfiguredValue=\"<%=legoR%>\">\n                        <Terminal Id=\"Speed\\ Right\" Direction=\"Input\" DataType=\"Single\" Hotspot=\"0.5 1\" Bounds=\"85 56 30 27\" />\n                    </ConfigurableMethodTerminal>\n                    <ConfigurableMethodTerminal ConfiguredValue=\"<%=legoRot%>\">\n                        <Terminal Id=\"Rotations\" Direction=\"Input\" DataType=\"Single\" Hotspot=\"0.5 1\" Bounds=\"116 56 30 27\" />\n                    </ConfigurableMethodTerminal>\n                    <ConfigurableMethodTerminal ConfiguredValue=\"True\">\n                        <Terminal Id=\"Brake\\ At\\ End\" Direction=\"Input\" DataType=\"Boolean\" Hotspot=\"0.5 1\" Bounds=\"147 56 30 27\" />\n                    </ConfigurableMethodTerminal>\n                    <ConfigurableMethodTerminal ConfiguredValue=\"0\">\n                        <Terminal Id=\"InterruptsToListenFor_16B03592_CD76_4D58_8DC3_E3C3091E327A\" Direction=\"Input\" DataType=\"Int32\" Hotspot=\"0.5 1\" Bounds=\"0 0 0 0\" />\n                    </ConfigurableMethodTerminal>\n                    <Terminal Id=\"SequenceIn\" Direction=\"Input\" Wire=\"w<%=wireID%>\" DataType=\"NationalInstruments:SourceModel:DataTypes:X3SequenceWireDataType\" Hotspot=\"0 0.5\" Bounds=\"0 33 18 18\" />\n                    <%\n                    if( isFinal) {\n                    %>                    <Terminal Id=\"SequenceOut\" Direction=\"Output\" Wire=\"w<%=wireID+1%>\" DataType=\"NationalInstruments:SourceModel:DataTypes:X3SequenceWireDataType\" Hotspot=\"1 0.5\" Bounds=\"176 33 18 18\" /><%\n                    } else {\n                    %>                    <Terminal Id=\"SequenceOut\" Direction=\"Output\" DataType=\"NationalInstruments:SourceModel:DataTypes:X3SequenceWireDataType\" Hotspot=\"1 0.5\" Bounds=\"176 33 18 18\" /><%\n                    }%>\n                </ConfigurableMethodCall>\n                <Wire Id=\"w<%=wireID%>\" Joints=\"N(n<%=componentID-1%>:SequenceOut) N(n<%=componentID%>:SequenceIn)\" />\n                <Comment Bounds=\"<%=componentX%> -12 100 36\" SizeMode=\"User\" AttachStyle=\"Free\">\n                    <Content><%=motionName%></Content>\n                </Comment>\n                <%\n    }\nmotion = {};\ncomponentX = 112;\ncomponentID = 2;\nwireID = 6;\nlegoL = 50;\nlegoR = 50;\nlegoRot = 1;\nhaveMotion = false;\nfor (i = 0; i < pathModel.motion.length; i += 1) {\n\tif(pathModel.motion[i].isStart) {\n\t\tmotion = pathModel.motion[i];\n\t\thaveMotion = true;\n\t\tbreak;\n\t}\n}\nwhile(haveMotion) {\n//console.log('Have a motion: ' + JSON.stringify(motion, null, 4));\n//console.log(' - PrimitiveMotionConnections: ' + JSON.stringify(motion.PrimitiveMotionConnections, null, 4));\n\n\tswitch(motion.Type) {\n        case 1:\t// Straight\n            legoL = 50;\n            legoR = 50;\n            legoRot = 1;\n            addMotion(componentID,componentX,legoL,legoR,legoRot,wireID, motion.PrimitiveMotionConnections.length != 0, motion.name);\n            break;\n        case 2:\t// Left\n            legoL = 25;\n            legoR = 50;\n            legoRot = 2.22;\n            addMotion(componentID,componentX,legoL,legoR,legoRot,wireID, motion.PrimitiveMotionConnections.length != 0, motion.name);\n            break;\n\t\tcase 3:\t// Right\n\t\t\tlegoL = 50;\n\t\t\tlegoR = 25;\n\t\t\tlegoRot = 2.22;\n            addMotion(componentID,componentX,legoL,legoR,legoRot,wireID, motion.PrimitiveMotionConnections.length != 0, motion.name);\n\t\t\tbreak;\n        case 4:// ZigZagLeft\n            addMotion(componentID,componentX,0,40,1.028,wireID, false, motion.name);\n            componentX += 194;\n            componentID++;\n            wireID++;\n            addMotion(componentID,componentX,15,15,0.5,wireID, false, motion.name);\n            componentX += 194;\n            componentID++;\n            wireID++;\n            addMotion(componentID,componentX,40,0,1.028,wireID, false, motion.name);\n            componentX += 194;\n            componentID++;\n            wireID++;\n            addMotion(componentID,componentX,15,15,0.3,wireID, motion.PrimitiveMotionConnections.length != 0, motion.name);\n            break;\n        case 5:// ZigZagRight\n            addMotion(componentID,componentX,40,0,1.028,wireID, false, motion.name);\n            componentX += 194;\n            componentID++;\n            wireID++;\n            addMotion(componentID,componentX,15,15,0.5,wireID, false, motion.name);\n            componentX += 194;\n            componentID++;\n            wireID++;\n            addMotion(componentID,componentX,0,40,1.028,wireID, false, motion.name);\n            componentX += 194;\n            componentID++;\n            wireID++;\n            addMotion(componentID,componentX,15,15,0.3,wireID, motion.PrimitiveMotionConnections.length != 0, motion.name);\n            break;\n\t}\n\n\n\n\n\n\thaveMotion = false;\n\tif( motion.PrimitiveMotionConnections.length != 0) {\n\t//\tconsole.log('There exists an outgoing connection');\n\t\tfor (i = 0; i < pathModel.motion.length; i += 1) {\n\t\t\tif(pathModel.motion[i].id === motion.PrimitiveMotionConnections[0].targetId) {\n\t\t\t\thaveMotion = true;\n\t\t\t\tmotion = pathModel.motion[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentX += 194;\n\tcomponentID++;\n\twireID++;\n\n}%>\n</BlockDiagram>\n            <Icon>\n                <Model0:IconPanel xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:Model0=\"clr-namespace:NationalInstruments.LabVIEW.VI.Design;assembly=NationalInstruments.LabVIEW.VI.SourceModel\" xmlns:fpruntime=\"clr-namespace:NationalInstruments.LabVIEW.FrontPanelRuntime;assembly=NationalInstruments.LabVIEW.FrontPanelRuntime\" Height=\"56\" Width=\"56\" Background=\"#FFE0E0E0\">\n                    <fpruntime:AnimationProperties.Animations>\n                        <fpruntime:AnimationsContainer />\n                    </fpruntime:AnimationProperties.Animations>\n                    <fpruntime:EventProperties.Events>\n                        <fpruntime:EventContainer />\n                    </fpruntime:EventProperties.Events>\n                </Model0:IconPanel>\n            </Icon>\n        </VirtualInstrument>\n    </Namespace>\n</SourceFile>\n"
}});