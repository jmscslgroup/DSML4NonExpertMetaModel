<%
	var gridDistance = 6.096*2; // 20ft * 2
	var velocity = 1;
	addMotion = function (motion, radius, velocity, distance, angle) {
%><%=motion%> <%=radius%> <%=velocity%> <%=distance%> <%=angle%>
<%
	}
motion = {};
haveMotion = false;
for (i = 0; i < pathModel.motion.length; i += 1) {
	if(pathModel.motion[i].isStart) {
		motion = pathModel.motion[i];
		haveMotion = true;
		break;
	}
}

while(haveMotion) {
//console.log('Have a motion: ' + JSON.stringify(motion, null, 4));
//console.log(' - PrimitiveMotionConnections: ' + JSON.stringify(motion.PrimitiveMotionConnections, null, 4));
switch(motion.Type) {
	case 1:	// straight
		addMotion(1, 0, velocity, gridDistance, 0);
	    break;
	case 2:	// left
		addMotion(2, gridDistance, velocity, 0, 90);
	    break;
	case 3:	// right
		addMotion(3, gridDistance, velocity, 0, 90);
	    break;
	case 4:// ZigZagLeft
		addMotion(2, gridDistance/2, velocity, 0, 90);
		addMotion(3, gridDistance/2, velocity, 0, 90);
	    break;
	case 5: // ZigZagRight
		addMotion(3, gridDistance/2, velocity, 0, 90);
		addMotion(2, gridDistance/2, velocity, 0, 90);
	    break;
}

haveMotion = false;
if( motion.PrimitiveMotionConnections.length != 0) {
//	console.log('There exists an outgoing connection');
	for (i = 0; i < pathModel.motion.length; i += 1) {
		if(pathModel.motion[i].id === motion.PrimitiveMotionConnections[0].targetId) {
			haveMotion = true;
			motion = pathModel.motion[i];
			break;
		}
	}
}
}%>